const flagCodeToName = {
	"ğŸ‡¦ğŸ‡¨":"ascension-island",
	"ğŸ‡¦ğŸ‡©":"andorra",
	"ğŸ‡¦ğŸ‡ª":"united-arab-emirates",
	"ğŸ‡¦ğŸ‡«":"afghanistan",
	"ğŸ‡¦ğŸ‡¬":"antigua-barbuda",
	"ğŸ‡¦ğŸ‡®":"anguilla",
	"ğŸ‡¦ğŸ‡±":"albania",
	"ğŸ‡¦ğŸ‡²":"armenia",
	"ğŸ‡¦ğŸ‡´":"angola",
	"ğŸ‡¦ğŸ‡¶":"antarctica",
	"ğŸ‡¦ğŸ‡·":"argentina",
	"ğŸ‡¦ğŸ‡¸":"american-samoa",
	"ğŸ‡¦ğŸ‡¹":"austria",
	"ğŸ‡¦ğŸ‡º":"australia",
	"ğŸ‡¦ğŸ‡¼":"aruba",
	"ğŸ‡¦ğŸ‡½":"aland-islands",
	"ğŸ‡¦ğŸ‡¿":"azerbaijan",
	"ğŸ‡§ğŸ‡¦":"bosnia-herzegovina",
	"ğŸ‡§ğŸ‡§":"barbados",
	"ğŸ‡§ğŸ‡©":"bangladesh",
	"ğŸ‡§ğŸ‡ª":"belgium",
	"ğŸ‡§ğŸ‡«":"burkina-faso",
	"ğŸ‡§ğŸ‡¬":"bulgaria",
	"ğŸ‡§ğŸ‡­":"bahrain",
	"ğŸ‡§ğŸ‡®":"burundi",
	"ğŸ‡§ğŸ‡¯":"benin",
	"ğŸ‡§ğŸ‡±":"st-barthelemy",
	"ğŸ‡§ğŸ‡²":"bermuda",
	"ğŸ‡§ğŸ‡³":"brunei",
	"ğŸ‡§ğŸ‡´":"bolivia",
	"ğŸ‡§ğŸ‡¶":"caribbean-netherlands",
	"ğŸ‡§ğŸ‡·":"brazil",
	"ğŸ‡§ğŸ‡¸":"bahamas",
	"ğŸ‡§ğŸ‡¹":"bhutan",
	"ğŸ‡§ğŸ‡»":"bouvet-island",
	"ğŸ‡§ğŸ‡¼":"botswana",
	"ğŸ‡§ğŸ‡¾":"belarus",
	"ğŸ‡§ğŸ‡¿":"belize",
	"ğŸ‡¨ğŸ‡¦":"canada",
	"ğŸ‡¨ğŸ‡¨":"cocos-keeling-islands",
	"ğŸ‡¨ğŸ‡©":"congo-kinshasa",
	"ğŸ‡¨ğŸ‡«":"central-african-republic",
	"ğŸ‡¨ğŸ‡¬":"congo-brazzaville",
	"ğŸ‡¨ğŸ‡­":"switzerland",
	"ğŸ‡¨ğŸ‡®":"cote-divoire",
	"ğŸ‡¨ğŸ‡°":"cook-islands",
	"ğŸ‡¨ğŸ‡±":"chile",
	"ğŸ‡¨ğŸ‡²":"cameroon",
	"ğŸ‡¨ğŸ‡³":"china",
	"ğŸ‡¨ğŸ‡´":"colombia",
	"ğŸ‡¨ğŸ‡µ":"clipperton-island",
	"ğŸ‡¨ğŸ‡·":"costa-rica",
	"ğŸ‡¨ğŸ‡º":"cuba",
	"ğŸ‡¨ğŸ‡»":"cape-verde",
	"ğŸ‡¨ğŸ‡¼":"curacao",
	"ğŸ‡¨ğŸ‡½":"christmas-island",
	"ğŸ‡¨ğŸ‡¾":"cyprus",
	"ğŸ‡¨ğŸ‡¿":"czechia",
	"ğŸ‡©ğŸ‡ª":"germany",
	"ğŸ‡©ğŸ‡¬":"diego-garcia",
	"ğŸ‡©ğŸ‡¯":"djibouti",
	"ğŸ‡©ğŸ‡°":"denmark",
	"ğŸ‡©ğŸ‡²":"dominica",
	"ğŸ‡©ğŸ‡´":"dominican-republic",
	"ğŸ‡©ğŸ‡¿":"algeria",
	"ğŸ‡ªğŸ‡¦":"ceuta-melilla",
	"ğŸ‡ªğŸ‡¨":"ecuador",
	"ğŸ‡ªğŸ‡ª":"estonia",
	"ğŸ‡ªğŸ‡¬":"egypt",
	"ğŸ‡ªğŸ‡­":"western-sahara",
	"ğŸ‡ªğŸ‡·":"eritrea",
	"ğŸ‡ªğŸ‡¸":"spain",
	"ğŸ‡ªğŸ‡¹":"ethiopia",
	"ğŸ‡ªğŸ‡º":"european-union",
	"ğŸ‡«ğŸ‡®":"finland",
	"ğŸ‡«ğŸ‡¯":"fiji",
	"ğŸ‡«ğŸ‡°":"falkland-islands",
	"ğŸ‡«ğŸ‡²":"micronesia",
	"ğŸ‡«ğŸ‡´":"faroe-islands",
	"ğŸ‡«ğŸ‡·":"france",
	"ğŸ‡¬ğŸ‡¦":"gabon",
	"ğŸ‡¬ğŸ‡§":"united-kingdom",
	"ğŸ‡¬ğŸ‡©":"grenada",
	"ğŸ‡¬ğŸ‡ª":"georgia",
	"ğŸ‡¬ğŸ‡«":"french-guiana",
	"ğŸ‡¬ğŸ‡¬":"guernsey",
	"ğŸ‡¬ğŸ‡­":"ghana",
	"ğŸ‡¬ğŸ‡®":"gibraltar",
	"ğŸ‡¬ğŸ‡±":"greenland",
	"ğŸ‡¬ğŸ‡²":"gambia",
	"ğŸ‡¬ğŸ‡³":"guinea",
	"ğŸ‡¬ğŸ‡µ":"guadeloupe",
	"ğŸ‡¬ğŸ‡¶":"equatorial-guinea",
	"ğŸ‡¬ğŸ‡·":"greece",
	"ğŸ‡¬ğŸ‡¸":"south-georgia-south-sandwich-islands",
	"ğŸ‡¬ğŸ‡¹":"guatemala",
	"ğŸ‡¬ğŸ‡º":"guam",
	"ğŸ‡¬ğŸ‡¼":"guinea-bissau",
	"ğŸ‡¬ğŸ‡¾":"guyana",
	"ğŸ‡­ğŸ‡°":"hong-kong-sar-china",
	"ğŸ‡­ğŸ‡²":"heard-mcdonald-islands",
	"ğŸ‡­ğŸ‡³":"honduras",
	"ğŸ‡­ğŸ‡·":"croatia",
	"ğŸ‡­ğŸ‡¹":"haiti",
	"ğŸ‡­ğŸ‡º":"hungary",
	"ğŸ‡®ğŸ‡¨":"canary-islands",
	"ğŸ‡®ğŸ‡©":"indonesia",
	"ğŸ‡®ğŸ‡ª":"ireland",
	"ğŸ‡®ğŸ‡±":"israel",
	"ğŸ‡®ğŸ‡²":"isle-of-man",
	"ğŸ‡®ğŸ‡³":"india",
	"ğŸ‡®ğŸ‡´":"british-indian-ocean-territory",
	"ğŸ‡®ğŸ‡¶":"iraq",
	"ğŸ‡®ğŸ‡·":"iran",
	"ğŸ‡®ğŸ‡¸":"iceland",
	"ğŸ‡®ğŸ‡¹":"italy",
	"ğŸ‡¯ğŸ‡ª":"jersey",
	"ğŸ‡¯ğŸ‡²":"jamaica",
	"ğŸ‡¯ğŸ‡´":"jordan",
	"ğŸ‡¯ğŸ‡µ":"japan",
	"ğŸ‡°ğŸ‡ª":"kenya",
	"ğŸ‡°ğŸ‡¬":"kyrgyzstan",
	"ğŸ‡°ğŸ‡­":"cambodia",
	"ğŸ‡°ğŸ‡®":"kiribati",
	"ğŸ‡°ğŸ‡²":"comoros",
	"ğŸ‡°ğŸ‡³":"st-kitts-nevis",
	"ğŸ‡°ğŸ‡µ":"north-korea",
	"ğŸ‡°ğŸ‡·":"south-korea",
	"ğŸ‡°ğŸ‡¼":"kuwait",
	"ğŸ‡°ğŸ‡¾":"cayman-islands",
	"ğŸ‡°ğŸ‡¿":"kazakhstan",
	"ğŸ‡±ğŸ‡¦":"laos",
	"ğŸ‡±ğŸ‡§":"lebanon",
	"ğŸ‡±ğŸ‡¨":"st-lucia",
	"ğŸ‡±ğŸ‡®":"liechtenstein",
	"ğŸ‡±ğŸ‡°":"sri-lanka",
	"ğŸ‡±ğŸ‡·":"liberia",
	"ğŸ‡±ğŸ‡¸":"lesotho",
	"ğŸ‡±ğŸ‡¹":"lithuania",
	"ğŸ‡±ğŸ‡º":"luxembourg",
	"ğŸ‡±ğŸ‡»":"latvia",
	"ğŸ‡±ğŸ‡¾":"libya",
	"ğŸ‡²ğŸ‡¦":"morocco",
	"ğŸ‡²ğŸ‡¨":"monaco",
	"ğŸ‡²ğŸ‡©":"moldova",
	"ğŸ‡²ğŸ‡ª":"montenegro",
	"ğŸ‡²ğŸ‡«":"st-martin",
	"ğŸ‡²ğŸ‡¬":"madagascar",
	"ğŸ‡²ğŸ‡­":"marshall-islands",
	"ğŸ‡²ğŸ‡°":"north-macedonia",
	"ğŸ‡²ğŸ‡±":"mali",
	"ğŸ‡²ğŸ‡²":"myanmar-burma",
	"ğŸ‡²ğŸ‡³":"mongolia",
	"ğŸ‡²ğŸ‡´":"macao-sar-china",
	"ğŸ‡²ğŸ‡µ":"northern-mariana-islands",
	"ğŸ‡²ğŸ‡¶":"martinique",
	"ğŸ‡²ğŸ‡·":"mauritania",
	"ğŸ‡²ğŸ‡¸":"montserrat",
	"ğŸ‡²ğŸ‡¹":"malta",
	"ğŸ‡²ğŸ‡º":"mauritius",
	"ğŸ‡²ğŸ‡»":"maldives",
	"ğŸ‡²ğŸ‡¼":"malawi",
	"ğŸ‡²ğŸ‡½":"mexico",
	"ğŸ‡²ğŸ‡¾":"malaysia",
	"ğŸ‡²ğŸ‡¿":"mozambique",
	"ğŸ‡³ğŸ‡¦":"namibia",
	"ğŸ‡³ğŸ‡¨":"new-caledonia",
	"ğŸ‡³ğŸ‡ª":"niger",
	"ğŸ‡³ğŸ‡«":"norfolk-island",
	"ğŸ‡³ğŸ‡¬":"nigeria",
	"ğŸ‡³ğŸ‡®":"nicaragua",
	"ğŸ‡³ğŸ‡±":"netherlands",
	"ğŸ‡³ğŸ‡´":"norway",
	"ğŸ‡³ğŸ‡µ":"nepal",
	"ğŸ‡³ğŸ‡·":"nauru",
	"ğŸ‡³ğŸ‡º":"niue",
	"ğŸ‡³ğŸ‡¿":"new-zealand",
	"ğŸ‡´ğŸ‡²":"oman",
	"ğŸ‡µğŸ‡¦":"panama",
	"ğŸ‡µğŸ‡ª":"peru",
	"ğŸ‡µğŸ‡«":"french-polynesia",
	"ğŸ‡µğŸ‡¬":"papua-new-guinea",
	"ğŸ‡µğŸ‡­":"philippines",
	"ğŸ‡µğŸ‡°":"pakistan",
	"ğŸ‡µğŸ‡±":"poland",
	"ğŸ‡µğŸ‡²":"st-pierre-miquelon",
	"ğŸ‡µğŸ‡³":"pitcairn-islands",
	"ğŸ‡µğŸ‡·":"puerto-rico",
	"ğŸ‡µğŸ‡¸":"palestinian-territories",
	"ğŸ‡µğŸ‡¹":"portugal",
	"ğŸ‡µğŸ‡¼":"palau",
	"ğŸ‡µğŸ‡¾":"paraguay",
	"ğŸ‡¶ğŸ‡¦":"qatar",
	"ğŸ‡·ğŸ‡ª":"reunion",
	"ğŸ‡·ğŸ‡´":"romania",
	"ğŸ‡·ğŸ‡¸":"serbia",
	"ğŸ‡·ğŸ‡º":"russia",
	"ğŸ‡·ğŸ‡¼":"rwanda",
	"ğŸ‡¸ğŸ‡¦":"saudi-arabia",
	"ğŸ‡¸ğŸ‡§":"solomon-islands",
	"ğŸ‡¸ğŸ‡¨":"seychelles",
	"ğŸ‡¸ğŸ‡©":"sudan",
	"ğŸ‡¸ğŸ‡ª":"sweden",
	"ğŸ‡¸ğŸ‡¬":"singapore",
	"ğŸ‡¸ğŸ‡­":"st-helena",
	"ğŸ‡¸ğŸ‡®":"slovenia",
	"ğŸ‡¸ğŸ‡¯":"svalbard-jan-mayen",
	"ğŸ‡¸ğŸ‡°":"slovakia",
	"ğŸ‡¸ğŸ‡±":"sierra-leone",
	"ğŸ‡¸ğŸ‡²":"san-marino",
	"ğŸ‡¸ğŸ‡³":"senegal",
	"ğŸ‡¸ğŸ‡´":"somalia",
	"ğŸ‡¸ğŸ‡·":"suriname",
	"ğŸ‡¸ğŸ‡¸":"south-sudan",
	"ğŸ‡¸ğŸ‡¹":"sao-tome-principe",
	"ğŸ‡¸ğŸ‡»":"el-salvador",
	"ğŸ‡¸ğŸ‡½":"sint-maarten",
	"ğŸ‡¸ğŸ‡¾":"syria",
	"ğŸ‡¸ğŸ‡¿":"eswatini",
	"ğŸ‡¹ğŸ‡¦":"tristan-da-cunha",
	"ğŸ‡¹ğŸ‡¨":"turks-caicos-islands",
	"ğŸ‡¹ğŸ‡©":"chad",
	"ğŸ‡¹ğŸ‡«":"french-southern-territories",
	"ğŸ‡¹ğŸ‡¬":"togo",
	"ğŸ‡¹ğŸ‡­":"thailand",
	"ğŸ‡¹ğŸ‡¯":"tajikistan",
	"ğŸ‡¹ğŸ‡°":"tokelau",
	"ğŸ‡¹ğŸ‡±":"timor-leste",
	"ğŸ‡¹ğŸ‡²":"turkmenistan",
	"ğŸ‡¹ğŸ‡³":"tunisia",
	"ğŸ‡¹ğŸ‡´":"tonga",
	"ğŸ‡¹ğŸ‡·":"turkey",
	"ğŸ‡¹ğŸ‡¹":"trinidad-tobago",
	"ğŸ‡¹ğŸ‡»":"tuvalu",
	"ğŸ‡¹ğŸ‡¼":"taiwan",
	"ğŸ‡¹ğŸ‡¿":"tanzania",
	"ğŸ‡ºğŸ‡¦":"ukraine",
	"ğŸ‡ºğŸ‡¬":"uganda",
	"ğŸ‡ºğŸ‡²":"us-outlying-islands",
	"ğŸ‡ºğŸ‡³":"united-nations",
	"ğŸ‡ºğŸ‡¸":"united-states",
	"ğŸ‡ºğŸ‡¾":"uruguay",
	"ğŸ‡ºğŸ‡¿":"uzbekistan",
	"ğŸ‡»ğŸ‡¦":"vatican-city",
	"ğŸ‡»ğŸ‡¨":"st-vincent-grenadines",
	"ğŸ‡»ğŸ‡ª":"venezuela",
	"ğŸ‡»ğŸ‡¬":"british-virgin-islands",
	"ğŸ‡»ğŸ‡®":"us-virgin-islands",
	"ğŸ‡»ğŸ‡³":"vietnam",
	"ğŸ‡»ğŸ‡º":"vanuatu",
	"ğŸ‡¼ğŸ‡«":"wallis-futuna",
	"ğŸ‡¼ğŸ‡¸":"samoa",
	"ğŸ‡½ğŸ‡°":"kosovo",
	"ğŸ‡¾ğŸ‡ª":"yemen",
	"ğŸ‡¾ğŸ‡¹":"mayotte",
	"ğŸ‡¿ğŸ‡¦":"south-africa",
	"ğŸ‡¿ğŸ‡²":"zambia",
	"ğŸ‡¿ğŸ‡¼":"zimbabwe"
}

const urlNums = {
	"apple": "354",
	"google": "350",
	"samsung": "349",
	"whatsapp": "352",
	"twitter": "322",
	"facebook": "355",
	"openmoji": "338"
}

function utf16ToUtf32(utf16Chars){
	// Takes to characters in Utf16 and converts them to the hex representation in Utf32
	let highSurrogate = (utf16Chars.charCodeAt(0));
	let lowSurrogate = (utf16Chars.charCodeAt(1));

	// https://en.wikipedia.org/wiki/UTF-16
	let final = ((highSurrogate - 0xD800) * 0x400) + (lowSurrogate - 0xDC00) + 0x10000;
	return final;
}

// Convert Regional Indicator Chars to inline HTML of an <img>.
function riToImg(text, settings){

	let flagName = flagCodeToName[text];
	// Js uses UTF16 because it is stupid, so convert the 4 chars (2 per Regional Indicator) to 2 in UTF32
	let char1 = (utf16ToUtf32(text.slice(0, 2))).toString(16);
	let char2 = (utf16ToUtf32(text.slice(2, 4))).toString(16);

	let imgSrc;
	let {style, size, margin} = settings;
	imgSrc = `https://em-content.zobj.net/thumbs/120/${style}/${urlNums[style]}/flag-${flagName}_${char1}-${char2}.png`;
	
	return `<img
		src="${imgSrc}"
		alt="flag of ${flagName}"
		style="
			height: ${size};
			margin: ${margin};
			vertical-align: bottom;
			-webkit-user-drag: none;
		"
	/>`.replaceAll(/[\t\n]+/g, " ");
	// Replace tabs and newlines that are caused by me making this more readable instead of having it be a one-liner

}

function replaceNode(node){
	let newText = node.textContent.replaceAll(RIRegex, (match) => riToImg(match, storage) );

	if (node.textContent !== newText){
		// Replacing innerHTML of node won't work, so you have to make a wrapper element
		let div = document.createElement("div");
		div.innerHTML = newText;
		node.replaceWith(div);
		div.outerHTML = div.innerHTML;
	}
}

function replaceRIsRecursively(element){
	if (element.nodeType === Node.TEXT_NODE) replaceNode(element);

	for (let node of element.childNodes) {
		switch (node.nodeType) {
			case Node.ELEMENT_NODE || Node.DOCUMENT_NODE:
				replaceRIsRecursively(node);
				break;

			case Node.TEXT_NODE:
				replaceNode(node);
				break;
		}
	}
}

const RIRegex = /[\uD83C][\uDDE6-\uDDFF][\uD83C][\uDDE6-\uDDFF]/g;
let storage;

(async function(){

	storage = await chrome.storage.sync.get();

	// This is false when viewing something thats not html
	if (document.body !== null){
		// Replace entire body to begin with (for static pages)
		replaceRIsRecursively(document.body);
	
		// If any node in the page ever changes, search everything in that node again
		let obv = new MutationObserver((mutations) => {
			mutations.forEach((mutation) => {
				if (
					mutation.type === "childList" ||
					mutation.type === "characterData"
				){
					mutation.addedNodes.forEach((node) => {
						replaceRIsRecursively(node);
					})
				}
			});
		});

		obv.observe(document.body, {
			childList: true,
			subtree: true
		})
	}

})();
